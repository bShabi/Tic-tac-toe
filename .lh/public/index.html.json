{
    "sourceFile": "public/index.html",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 21,
            "patches": [
                {
                    "date": 1732963695931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1732963798313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,9 +110,9 @@\n         </div>\n     </div>\n \n     <script>\n-        const socket = io('wss://tic-tac-toe-420d.onrender.com');\n+        const socket = io('wss://tic-tac-toe-420d.onrender.com/');\n         let playerMark = '';\n         let currentTurn = false;\n \n         function createGame() {\n"
                },
                {
                    "date": 1732964073889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,95 +3,195 @@\n <head>\n     <title>Multiplayer Tic-tac-toe</title>\n     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n     <style>\n+        :root {\n+            --primary-color: #6366f1;\n+            --primary-hover: #4f46e5;\n+            --bg-color: #f8fafc;\n+            --cell-bg: #ffffff;\n+            --border-color: #e2e8f0;\n+            --text-color: #1e293b;\n+        }\n+\n+        * {\n+            margin: 0;\n+            padding: 0;\n+            box-sizing: border-box;\n+        }\n+\n         body {\n-            font-family: Arial, sans-serif;\n+            font-family: 'Inter', -apple-system, sans-serif;\n+            background-color: var(--bg-color);\n+            color: var(--text-color);\n+            line-height: 1.5;\n+            min-height: 100vh;\n             display: flex;\n+            align-items: center;\n             justify-content: center;\n-            align-items: center;\n-            min-height: 100vh;\n-            margin: 0;\n-            background-color: #f0f0f0;\n+            padding: 1rem;\n         }\n \n         .container {\n-            text-align: center;\n+            width: 100%;\n+            max-width: 450px;\n             background: white;\n             padding: 2rem;\n-            border-radius: 10px;\n-            box-shadow: 0 0 10px rgba(0,0,0,0.1);\n+            border-radius: 1rem;\n+            box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);\n         }\n \n-        #gameBoard {\n-            display: none;\n-            grid-template-columns: repeat(3, 1fr);\n-            gap: 10px;\n-            margin: 20px auto;\n-            max-width: 300px;\n+        h1 {\n+            font-size: 1.875rem;\n+            font-weight: 700;\n+            text-align: center;\n+            margin-bottom: 1.5rem;\n+            color: var(--text-color);\n         }\n \n-        .cell {\n-            width: 90px;\n-            height: 90px;\n-            background: #f8f9fa;\n-            border: none;\n-            border-radius: 8px;\n-            font-size: 2.5em;\n-            cursor: pointer;\n-            transition: background-color 0.3s;\n+        #joinForm {\n+            display: flex;\n+            flex-direction: column;\n+            gap: 1rem;\n+            margin-bottom: 1.5rem;\n         }\n \n-        .cell:hover {\n-            background: #e9ecef;\n+        .input-group {\n+            display: flex;\n+            gap: 0.5rem;\n         }\n \n-        #joinForm {\n-            margin-bottom: 20px;\n+        input {\n+            flex: 1;\n+            padding: 0.75rem 1rem;\n+            border: 1px solid var(--border-color);\n+            border-radius: 0.5rem;\n+            font-size: 1rem;\n+            outline: none;\n+            transition: border-color 0.2s;\n         }\n \n-        input, button {\n-            padding: 10px;\n-            margin: 5px;\n-            border: 1px solid #ddd;\n-            border-radius: 5px;\n+        input:focus {\n+            border-color: var(--primary-color);\n+            box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n         }\n \n         button {\n-            background: #007bff;\n+            padding: 0.75rem 1.5rem;\n+            border: none;\n+            border-radius: 0.5rem;\n+            background: var(--primary-color);\n             color: white;\n-            border: none;\n+            font-weight: 600;\n+            font-size: 1rem;\n             cursor: pointer;\n-            transition: background-color 0.3s;\n+            transition: background-color 0.2s, transform 0.1s;\n+            width: 100%;\n         }\n \n         button:hover {\n-            background: #0056b3;\n+            background: var(--primary-hover);\n         }\n \n-        #status {\n-            margin: 20px 0;\n-            font-weight: bold;\n-            min-height: 24px;\n+        button:active {\n+            transform: translateY(1px);\n         }\n \n+        #gameBoard {\n+            display: none;\n+            grid-template-columns: repeat(3, 1fr);\n+            gap: 0.75rem;\n+            margin: 1.5rem auto;\n+            max-width: 350px;\n+        }\n+\n+        .cell {\n+            aspect-ratio: 1;\n+            width: 100%;\n+            background: var(--cell-bg);\n+            border: 2px solid var(--border-color);\n+            border-radius: 0.75rem;\n+            font-size: 2rem;\n+            font-weight: 700;\n+            color: var(--primary-color);\n+            cursor: pointer;\n+            transition: all 0.2s;\n+        }\n+\n+        .cell:hover:not(:disabled) {\n+            background: #f1f5f9;\n+            transform: scale(1.02);\n+        }\n+\n+        .cell:disabled {\n+            cursor: not-allowed;\n+            opacity: 0.7;\n+        }\n+\n         #gameCode {\n             display: none;\n-            margin: 10px 0;\n-            padding: 10px;\n-            background: #e9ecef;\n-            border-radius: 5px;\n+            text-align: center;\n+            background: #f8fafc;\n+            padding: 1rem;\n+            border-radius: 0.5rem;\n+            font-family: monospace;\n+            font-size: 1.25rem;\n+            margin: 1rem 0;\n+            border: 1px dashed var(--border-color);\n         }\n+\n+        #status {\n+            text-align: center;\n+            font-weight: 600;\n+            min-height: 1.5rem;\n+            margin: 1rem 0;\n+            color: var(--primary-color);\n+        }\n+\n+        .animate-pop {\n+            animation: pop 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);\n+        }\n+\n+        @keyframes pop {\n+            0% { transform: scale(0.8); opacity: 0; }\n+            100% { transform: scale(1); opacity: 1; }\n+        }\n+\n+        /* Mobile Responsiveness */\n+        @media (max-width: 480px) {\n+            .container {\n+                padding: 1.5rem;\n+            }\n+\n+            h1 {\n+                font-size: 1.5rem;\n+            }\n+\n+            .cell {\n+                font-size: 1.75rem;\n+            }\n+\n+            button {\n+                padding: 0.75rem 1rem;\n+            }\n+\n+            #gameCode {\n+                font-size: 1rem;\n+                padding: 0.75rem;\n+            }\n+        }\n     </style>\n     <script src=\"/socket.io/socket.io.js\"></script>\n </head>\n <body>\n     <div class=\"container\">\n-        <h1>Multiplayer Tic-tac-toe</h1>\n+        <h1>Tic-tac-toe</h1>\n         \n         <div id=\"joinForm\">\n-            <input type=\"text\" id=\"gameCodeInput\" placeholder=\"Enter game code\">\n-            <button onclick=\"joinGame()\">Join Game</button>\n+            <div class=\"input-group\">\n+                <input type=\"text\" id=\"gameCodeInput\" placeholder=\"Enter game code\" autocomplete=\"off\">\n+                <button onclick=\"joinGame()\">Join</button>\n+            </div>\n             <button onclick=\"createGame()\">Create New Game</button>\n         </div>\n \n         <div id=\"gameCode\"></div>\n@@ -110,63 +210,89 @@\n         </div>\n     </div>\n \n     <script>\n-        const socket = io('wss://tic-tac-toe-420d.onrender.com/');\n+        const socket = io();\n         let playerMark = '';\n         let currentTurn = false;\n \n         function createGame() {\n             socket.emit('createGame');\n+            addPopAnimation(document.querySelector('.container'));\n         }\n \n         function joinGame() {\n             const code = document.getElementById('gameCodeInput').value;\n             if (code) {\n                 socket.emit('joinGame', code);\n+                addPopAnimation(document.querySelector('.container'));\n             }\n         }\n \n         function makeMove(cellIndex) {\n             if (currentTurn) {\n-                socket.emit('makeMove', { cellIndex, gameCode: document.getElementById('gameCode').textContent.split(': ')[1] });\n+                const cell = document.getElementsByClassName('cell')[cellIndex];\n+                if (!cell.textContent) {\n+                    socket.emit('makeMove', { \n+                        cellIndex, \n+                        gameCode: document.getElementById('gameCode').textContent.split(': ')[1] \n+                    });\n+                }\n             }\n         }\n \n+        function addPopAnimation(element) {\n+            element.classList.add('animate-pop');\n+            element.addEventListener('animationend', () => {\n+                element.classList.remove('animate-pop');\n+            }, { once: true });\n+        }\n+\n         socket.on('gameCreated', (gameCode) => {\n             document.getElementById('gameCode').style.display = 'block';\n             document.getElementById('gameCode').textContent = 'Game Code: ' + gameCode;\n             document.getElementById('status').textContent = 'Waiting for opponent...';\n             document.getElementById('gameBoard').style.display = 'grid';\n             document.getElementById('joinForm').style.display = 'none';\n             playerMark = 'X';\n+            addPopAnimation(document.getElementById('gameBoard'));\n         });\n \n         socket.on('gameJoined', (data) => {\n             document.getElementById('gameBoard').style.display = 'grid';\n             document.getElementById('joinForm').style.display = 'none';\n             document.getElementById('status').textContent = \"Game started! You are \" + data.mark;\n             playerMark = data.mark;\n             currentTurn = data.mark === 'X';\n+            addPopAnimation(document.getElementById('gameBoard'));\n         });\n \n         socket.on('updateGame', (data) => {\n             const cells = document.getElementsByClassName('cell');\n-            for (let i = 0; i < cells.length; i++) {\n-                cells[i].textContent = data.board[i];\n-            }\n+            data.board.forEach((mark, index) => {\n+                if (mark !== cells[index].textContent) {\n+                    cells[index].textContent = mark;\n+                    if (mark) addPopAnimation(cells[index]);\n+                }\n+                cells[index].disabled = !!mark;\n+            });\n+            \n             currentTurn = data.currentPlayer === playerMark;\n             document.getElementById('status').textContent = currentTurn ? 'Your turn!' : \"Opponent's turn\";\n         });\n \n         socket.on('gameOver', (data) => {\n             const cells = document.getElementsByClassName('cell');\n-            for (let i = 0; i < cells.length; i++) {\n-                cells[i].textContent = data.board[i];\n-            }\n-            document.getElementById('status').textContent = data.winner ? \n-                (data.winner === playerMark ? 'You won!' : 'You lost!') : \n-                'Game ended in a draw!';\n+            data.board.forEach((mark, index) => {\n+                cells[index].textContent = mark;\n+                cells[index].disabled = true;\n+            });\n+            \n+            const statusText = data.winner ? \n+                (data.winner === playerMark ? 'You won! 🎉' : 'You lost! 😔') : \n+                'Game ended in a draw! 🤝';\n+            \n+            document.getElementById('status').textContent = statusText;\n             currentTurn = false;\n         });\n \n         socket.on('error', (message) => {\n"
                },
                {
                    "date": 1732964328337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -195,19 +195,19 @@\n         </div>\n \n         <div id=\"gameCode\"></div>\n         <div id=\"status\"></div>\n-\n+        \n         <div id=\"gameBoard\">\n-            <button class=\"cell\" onclick=\"makeMove(0)\"></button>\n-            <button class=\"cell\" onclick=\"makeMove(1)\"></button>\n-            <button class=\"cell\" onclick=\"makeMove(2)\"></button>\n-            <button class=\"cell\" onclick=\"makeMove(3)\"></button>\n-            <button class=\"cell\" onclick=\"makeMove(4)\"></button>\n-            <button class=\"cell\" onclick=\"makeMove(5)\"></button>\n-            <button class=\"cell\" onclick=\"makeMove(6)\"></button>\n-            <button class=\"cell\" onclick=\"makeMove(7)\"></button>\n-            <button class=\"cell\" onclick=\"makeMove(8)\"></button>\n+            <button class=\"cell\" ontouchstart=\"handleCellClick(0)\" onclick=\"handleCellClick(0)\"></button>\n+            <button class=\"cell\" ontouchstart=\"handleCellClick(1)\" onclick=\"handleCellClick(1)\"></button>\n+            <button class=\"cell\" ontouchstart=\"handleCellClick(2)\" onclick=\"handleCellClick(2)\"></button>\n+            <button class=\"cell\" ontouchstart=\"handleCellClick(3)\" onclick=\"handleCellClick(3)\"></button>\n+            <button class=\"cell\" ontouchstart=\"handleCellClick(4)\" onclick=\"handleCellClick(4)\"></button>\n+            <button class=\"cell\" ontouchstart=\"handleCellClick(5)\" onclick=\"handleCellClick(5)\"></button>\n+            <button class=\"cell\" ontouchstart=\"handleCellClick(6)\" onclick=\"handleCellClick(6)\"></button>\n+            <button class=\"cell\" ontouchstart=\"handleCellClick(7)\" onclick=\"handleCellClick(7)\"></button>\n+            <button class=\"cell\" ontouchstart=\"handleCellClick(8)\" onclick=\"handleCellClick(8)\"></button>\n         </div>\n     </div>\n \n     <script>\n"
                },
                {
                    "date": 1732964431047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -193,11 +193,15 @@\n             </div>\n             <button onclick=\"createGame()\">Create New Game</button>\n         </div>\n \n+        <div class=\"code-container\" style=\"display: none;\" id=\"codeContainer\">\n+            <div id=\"gameCode\"></div>\n+            <button onclick=\"shareGameCode()\" class=\"share-button\">Share Code</button>\n+        </div>\n         <div id=\"gameCode\"></div>\n         <div id=\"status\"></div>\n-        \n+\n         <div id=\"gameBoard\">\n             <button class=\"cell\" ontouchstart=\"handleCellClick(0)\" onclick=\"handleCellClick(0)\"></button>\n             <button class=\"cell\" ontouchstart=\"handleCellClick(1)\" onclick=\"handleCellClick(1)\"></button>\n             <button class=\"cell\" ontouchstart=\"handleCellClick(2)\" onclick=\"handleCellClick(2)\"></button>\n@@ -213,9 +217,40 @@\n     <script>\n         const socket = io();\n         let playerMark = '';\n         let currentTurn = false;\n+        \n+        async function shareGameCode() {\n+            const gameCode = document.getElementById('gameCode').textContent.split(': ')[1];\n+            const shareData = {\n+                title: 'Join my Tic-tac-toe game!',\n+                text: `Join my game with code: ${gameCode}`,\n+                url: window.location.href\n+            };\n \n+            try {\n+                if (navigator.share) {\n+                    // Use native sharing if available (mobile devices)\n+                    await navigator.share(shareData);\n+                } else {\n+                    // Fallback to clipboard copy\n+                    await navigator.clipboard.writeText(`Join my Tic-tac-toe game! Code: ${gameCode}`);\n+                    alert('Game code copied to clipboard!');\n+                }\n+            } catch (err) {\n+                console.error('Error sharing:', err);\n+            }\n+        }\n+\n+        function handleCellClick(cellIndex) {\n+            event.preventDefault(); // Prevent double-firing\n+            if (event.type === 'click' && event.clientX === 0 && event.clientY === 0) {\n+                // Ignore synthetic click events from touch\n+                return;\n+            }\n+            makeMove(cellIndex);\n+        }\n+\n         function createGame() {\n             socket.emit('createGame');\n             addPopAnimation(document.querySelector('.container'));\n         }\n"
                },
                {
                    "date": 1732964453256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -217,9 +217,9 @@\n     <script>\n         const socket = io();\n         let playerMark = '';\n         let currentTurn = false;\n-        \n+\n         async function shareGameCode() {\n             const gameCode = document.getElementById('gameCode').textContent.split(': ')[1];\n             const shareData = {\n                 title: 'Join my Tic-tac-toe game!',\n@@ -262,8 +262,9 @@\n                 addPopAnimation(document.querySelector('.container'));\n             }\n         }\n \n+\n         function makeMove(cellIndex) {\n             if (currentTurn) {\n                 const cell = document.getElementsByClassName('cell')[cellIndex];\n                 if (!cell.textContent) {\n"
                },
                {
                    "date": 1732964475912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -283,9 +283,9 @@\n             }, { once: true });\n         }\n \n         socket.on('gameCreated', (gameCode) => {\n-            document.getElementById('gameCode').style.display = 'block';\n+            document.getElementById('codeContainer').style.display = 'flex';\n             document.getElementById('gameCode').textContent = 'Game Code: ' + gameCode;\n             document.getElementById('status').textContent = 'Waiting for opponent...';\n             document.getElementById('gameBoard').style.display = 'grid';\n             document.getElementById('joinForm').style.display = 'none';\n"
                },
                {
                    "date": 1732964977196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,12 +194,12 @@\n             <button onclick=\"createGame()\">Create New Game</button>\n         </div>\n \n         <div class=\"code-container\" style=\"display: none;\" id=\"codeContainer\">\n-            <div id=\"gameCode\"></div>\n+            <div id=\"gameCode\" onclick=\"copyGameCode()\"></div>\n             <button onclick=\"shareGameCode()\" class=\"share-button\">Share Code</button>\n         </div>\n-        <div id=\"gameCode\"></div>\n+        \n         <div id=\"status\"></div>\n \n         <div id=\"gameBoard\">\n             <button class=\"cell\" ontouchstart=\"handleCellClick(0)\" onclick=\"handleCellClick(0)\"></button>\n"
                },
                {
                    "date": 1732965022049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -222,10 +222,10 @@\n         async function shareGameCode() {\n             const gameCode = document.getElementById('gameCode').textContent.split(': ')[1];\n             const shareData = {\n                 title: 'Join my Tic-tac-toe game!',\n-                text: `Join my game with code: ${gameCode}`,\n-                url: window.location.href\n+                text: `Join my Tic-tac-toe game!`,\n+                url: `${window.location.origin}${window.location.pathname}?code=${gameCode}`\n             };\n \n             try {\n                 if (navigator.share) {\n@@ -281,9 +281,17 @@\n             element.addEventListener('animationend', () => {\n                 element.classList.remove('animate-pop');\n             }, { once: true });\n         }\n-\n+        // Check for game code in URL on page load\n+        window.addEventListener('load', function() {\n+            const urlParams = new URLSearchParams(window.location.search);\n+            const code = urlParams.get('code');\n+            if (code) {\n+                document.getElementById('gameCodeInput').value = code;\n+                joinGame();\n+            }\n+        });\n         socket.on('gameCreated', (gameCode) => {\n             document.getElementById('codeContainer').style.display = 'flex';\n             document.getElementById('gameCode').textContent = 'Game Code: ' + gameCode;\n             document.getElementById('status').textContent = 'Waiting for opponent...';\n"
                },
                {
                    "date": 1732965034872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,17 +228,15 @@\n             };\n \n             try {\n                 if (navigator.share) {\n-                    // Use native sharing if available (mobile devices)\n                     await navigator.share(shareData);\n                 } else {\n-                    // Fallback to clipboard copy\n-                    await navigator.clipboard.writeText(`Join my Tic-tac-toe game! Code: ${gameCode}`);\n-                    alert('Game code copied to clipboard!');\n+                    copyGameCode();\n                 }\n             } catch (err) {\n                 console.error('Error sharing:', err);\n+                copyGameCode();\n             }\n         }\n \n         function handleCellClick(cellIndex) {\n"
                },
                {
                    "date": 1732965054016,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -247,8 +247,20 @@\n             }\n             makeMove(cellIndex);\n         }\n \n+        function copyGameCode() {\n+            const gameCode = document.getElementById('gameCode').textContent.split(': ')[1];\n+            const shareUrl = `${window.location.origin}${window.location.pathname}?code=${gameCode}`;\n+            \n+            navigator.clipboard.writeText(shareUrl).then(() => {\n+                const toast = document.getElementById('copyToast');\n+                toast.style.display = 'block';\n+                setTimeout(() => {\n+                    toast.style.display = 'none';\n+                }, 2000);\n+            });\n+        }\n         function createGame() {\n             socket.emit('createGame');\n             addPopAnimation(document.querySelector('.container'));\n         }\n"
                },
                {
                    "date": 1732965069724,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -308,8 +308,12 @@\n             document.getElementById('gameBoard').style.display = 'grid';\n             document.getElementById('joinForm').style.display = 'none';\n             playerMark = 'X';\n             addPopAnimation(document.getElementById('gameBoard'));\n+\n+            // Update URL with game code\n+            const newUrl = `${window.location.pathname}?code=${gameCode}`;\n+            window.history.pushState({ path: newUrl }, '', newUrl);\n         });\n \n         socket.on('gameJoined', (data) => {\n             document.getElementById('gameBoard').style.display = 'grid';\n"
                },
                {
                    "date": 1732965289268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -201,17 +201,18 @@\n         \n         <div id=\"status\"></div>\n \n         <div id=\"gameBoard\">\n-            <button class=\"cell\" ontouchstart=\"handleCellClick(0)\" onclick=\"handleCellClick(0)\"></button>\n-            <button class=\"cell\" ontouchstart=\"handleCellClick(1)\" onclick=\"handleCellClick(1)\"></button>\n-            <button class=\"cell\" ontouchstart=\"handleCellClick(2)\" onclick=\"handleCellClick(2)\"></button>\n-            <button class=\"cell\" ontouchstart=\"handleCellClick(3)\" onclick=\"handleCellClick(3)\"></button>\n-            <button class=\"cell\" ontouchstart=\"handleCellClick(4)\" onclick=\"handleCellClick(4)\"></button>\n-            <button class=\"cell\" ontouchstart=\"handleCellClick(5)\" onclick=\"handleCellClick(5)\"></button>\n-            <button class=\"cell\" ontouchstart=\"handleCellClick(6)\" onclick=\"handleCellClick(6)\"></button>\n-            <button class=\"cell\" ontouchstart=\"handleCellClick(7)\" onclick=\"handleCellClick(7)\"></button>\n-            <button class=\"cell\" ontouchstart=\"handleCellClick(8)\" onclick=\"handleCellClick(8)\"></button>\n+            <button class=\"cell\" onclick=\"makeMove(0)\"></button>\n+            <button class=\"cell\" onclick=\"makeMove(1)\"></button>\n+            <button class=\"cell\" onclick=\"makeMove(2)\"></button>\n+            <button class=\"cell\" onclick=\"makeMove(3)\"></button>\n+            <button class=\"cell\" onclick=\"makeMove(4)\"></button>\n+            <button class=\"cell\" onclick=\"makeMove(5)\"></button>\n+            <button class=\"cell\" onclick=\"makeMove(6)\"></button>\n+            <button class=\"cell\" onclick=\"makeMove(7)\"></button>\n+            <button class=\"cell\" onclick=\"makeMove(8)\"></button>\n+\n         </div>\n     </div>\n \n     <script>\n@@ -238,17 +239,10 @@\n                 copyGameCode();\n             }\n         }\n \n-        function handleCellClick(cellIndex) {\n-            event.preventDefault(); // Prevent double-firing\n-            if (event.type === 'click' && event.clientX === 0 && event.clientY === 0) {\n-                // Ignore synthetic click events from touch\n-                return;\n-            }\n-            makeMove(cellIndex);\n-        }\n \n+\n         function copyGameCode() {\n             const gameCode = document.getElementById('gameCode').textContent.split(': ')[1];\n             const shareUrl = `${window.location.origin}${window.location.pathname}?code=${gameCode}`;\n             \n"
                },
                {
                    "date": 1732965297860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -239,10 +239,20 @@\n                 copyGameCode();\n             }\n         }\n \n+function makeMove(cellIndex) {\n+    if (currentTurn) {\n+        const cell = document.getElementsByClassName('cell')[cellIndex];\n+        if (!cell.textContent) {\n+            socket.emit('makeMove', { \n+                cellIndex, \n+                gameCode: document.getElementById('gameCode').textContent.split(': ')[1] \n+            });\n+        }\n+    }\n+}\n \n-\n         function copyGameCode() {\n             const gameCode = document.getElementById('gameCode').textContent.split(': ')[1];\n             const shareUrl = `${window.location.origin}${window.location.pathname}?code=${gameCode}`;\n             \n"
                },
                {
                    "date": 1732965585909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,9 +199,8 @@\n             <button onclick=\"shareGameCode()\" class=\"share-button\">Share Code</button>\n         </div>\n         \n         <div id=\"status\"></div>\n-\n         <div id=\"gameBoard\">\n             <button class=\"cell\" onclick=\"makeMove(0)\"></button>\n             <button class=\"cell\" onclick=\"makeMove(1)\"></button>\n             <button class=\"cell\" onclick=\"makeMove(2)\"></button>\n@@ -210,9 +209,8 @@\n             <button class=\"cell\" onclick=\"makeMove(5)\"></button>\n             <button class=\"cell\" onclick=\"makeMove(6)\"></button>\n             <button class=\"cell\" onclick=\"makeMove(7)\"></button>\n             <button class=\"cell\" onclick=\"makeMove(8)\"></button>\n-\n         </div>\n     </div>\n \n     <script>\n"
                },
                {
                    "date": 1732965615601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -276,19 +276,24 @@\n         }\n \n \n         function makeMove(cellIndex) {\n-            if (currentTurn) {\n-                const cell = document.getElementsByClassName('cell')[cellIndex];\n-                if (!cell.textContent) {\n-                    socket.emit('makeMove', { \n-                        cellIndex, \n-                        gameCode: document.getElementById('gameCode').textContent.split(': ')[1] \n-                    });\n-                }\n+            if (!currentTurn) {\n+                console.log('Not your turn');\n+                return;\n             }\n-        }\n+            \n+            const cell = document.getElementsByClassName('cell')[cellIndex];\n+            if (cell.textContent) {\n+                console.log('Cell already taken');\n+                return;\n+            }\n \n+            const gameCode = document.getElementById('gameCode').textContent.split(': ')[1];\n+            console.log('Making move:', { cellIndex, gameCode, playerMark });\n+            socket.emit('makeMove', { cellIndex, gameCode });\n+}\n+\n         function addPopAnimation(element) {\n             element.classList.add('animate-pop');\n             element.addEventListener('animationend', () => {\n                 element.classList.remove('animate-pop');\n"
                },
                {
                    "date": 1732965628698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -322,15 +322,16 @@\n             window.history.pushState({ path: newUrl }, '', newUrl);\n         });\n \n         socket.on('gameJoined', (data) => {\n-            document.getElementById('gameBoard').style.display = 'grid';\n-            document.getElementById('joinForm').style.display = 'none';\n-            document.getElementById('status').textContent = \"Game started! You are \" + data.mark;\n-            playerMark = data.mark;\n-            currentTurn = data.mark === 'X';\n-            addPopAnimation(document.getElementById('gameBoard'));\n-        });\n+    document.getElementById('gameBoard').style.display = 'grid';\n+    document.getElementById('joinForm').style.display = 'none';\n+    document.getElementById('status').textContent = \"Game started! You are \" + data.mark;\n+    playerMark = data.mark;\n+    currentTurn = data.mark === 'X'; // X goes first\n+    addPopAnimation(document.getElementById('gameBoard'));\n+    console.log('Game joined:', { playerMark, currentTurn });\n+});\n \n         socket.on('updateGame', (data) => {\n             const cells = document.getElementsByClassName('cell');\n             data.board.forEach((mark, index) => {\n"
                },
                {
                    "date": 1732965640565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -330,23 +330,24 @@\n     currentTurn = data.mark === 'X'; // X goes first\n     addPopAnimation(document.getElementById('gameBoard'));\n     console.log('Game joined:', { playerMark, currentTurn });\n });\n+socket.on('updateGame', (data) => {\n+    console.log('Game updated:', data);\n+    const cells = document.getElementsByClassName('cell');\n+    data.board.forEach((mark, index) => {\n+        if (mark !== cells[index].textContent) {\n+            cells[index].textContent = mark;\n+            if (mark) addPopAnimation(cells[index]);\n+        }\n+        cells[index].disabled = !!mark;\n+    });\n+    \n+    currentTurn = data.currentPlayer === playerMark;\n+    document.getElementById('status').textContent = currentTurn ? 'Your turn!' : \"Opponent's turn\";\n+    console.log('Turn updated:', { currentTurn, playerMark });\n+});\n \n-        socket.on('updateGame', (data) => {\n-            const cells = document.getElementsByClassName('cell');\n-            data.board.forEach((mark, index) => {\n-                if (mark !== cells[index].textContent) {\n-                    cells[index].textContent = mark;\n-                    if (mark) addPopAnimation(cells[index]);\n-                }\n-                cells[index].disabled = !!mark;\n-            });\n-            \n-            currentTurn = data.currentPlayer === playerMark;\n-            document.getElementById('status').textContent = currentTurn ? 'Your turn!' : \"Opponent's turn\";\n-        });\n-\n         socket.on('gameOver', (data) => {\n             const cells = document.getElementsByClassName('cell');\n             data.board.forEach((mark, index) => {\n                 cells[index].textContent = mark;\n"
                },
                {
                    "date": 1732965667448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n <!DOCTYPE html>\n <html>\n+\n <head>\n     <title>Multiplayer Tic-tac-toe</title>\n     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n     <style>\n@@ -151,10 +152,17 @@\n             animation: pop 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);\n         }\n \n         @keyframes pop {\n-            0% { transform: scale(0.8); opacity: 0; }\n-            100% { transform: scale(1); opacity: 1; }\n+            0% {\n+                transform: scale(0.8);\n+                opacity: 0;\n+            }\n+\n+            100% {\n+                transform: scale(1);\n+                opacity: 1;\n+            }\n         }\n \n         /* Mobile Responsiveness */\n         @media (max-width: 480px) {\n@@ -181,12 +189,13 @@\n         }\n     </style>\n     <script src=\"/socket.io/socket.io.js\"></script>\n </head>\n+\n <body>\n     <div class=\"container\">\n         <h1>Tic-tac-toe</h1>\n-        \n+\n         <div id=\"joinForm\">\n             <div class=\"input-group\">\n                 <input type=\"text\" id=\"gameCodeInput\" placeholder=\"Enter game code\" autocomplete=\"off\">\n                 <button onclick=\"joinGame()\">Join</button>\n@@ -197,9 +206,9 @@\n         <div class=\"code-container\" style=\"display: none;\" id=\"codeContainer\">\n             <div id=\"gameCode\" onclick=\"copyGameCode()\"></div>\n             <button onclick=\"shareGameCode()\" class=\"share-button\">Share Code</button>\n         </div>\n-        \n+\n         <div id=\"status\"></div>\n         <div id=\"gameBoard\">\n             <button class=\"cell\" onclick=\"makeMove(0)\"></button>\n             <button class=\"cell\" onclick=\"makeMove(1)\"></button>\n@@ -237,32 +246,33 @@\n                 copyGameCode();\n             }\n         }\n \n-function makeMove(cellIndex) {\n-    if (currentTurn) {\n-        const cell = document.getElementsByClassName('cell')[cellIndex];\n-        if (!cell.textContent) {\n-            socket.emit('makeMove', { \n-                cellIndex, \n-                gameCode: document.getElementById('gameCode').textContent.split(': ')[1] \n-            });\n+        function makeMove(cellIndex) {\n+            if (currentTurn) {\n+                const cell = document.getElementsByClassName('cell')[cellIndex];\n+                if (!cell.textContent) {\n+                    socket.emit('makeMove', {\n+                        cellIndex,\n+                        gameCode: document.getElementById('gameCode').textContent.split(': ')[1]\n+                    });\n+                }\n+            }\n         }\n-    }\n-}\n \n         function copyGameCode() {\n             const gameCode = document.getElementById('gameCode').textContent.split(': ')[1];\n             const shareUrl = `${window.location.origin}${window.location.pathname}?code=${gameCode}`;\n-            \n+\n             navigator.clipboard.writeText(shareUrl).then(() => {\n                 const toast = document.getElementById('copyToast');\n                 toast.style.display = 'block';\n                 setTimeout(() => {\n                     toast.style.display = 'none';\n                 }, 2000);\n             });\n         }\n+\n         function createGame() {\n             socket.emit('createGame');\n             addPopAnimation(document.querySelector('.container'));\n         }\n@@ -280,28 +290,37 @@\n             if (!currentTurn) {\n                 console.log('Not your turn');\n                 return;\n             }\n-            \n+\n             const cell = document.getElementsByClassName('cell')[cellIndex];\n             if (cell.textContent) {\n                 console.log('Cell already taken');\n                 return;\n             }\n \n             const gameCode = document.getElementById('gameCode').textContent.split(': ')[1];\n-            console.log('Making move:', { cellIndex, gameCode, playerMark });\n-            socket.emit('makeMove', { cellIndex, gameCode });\n-}\n+            console.log('Making move:', {\n+                cellIndex,\n+                gameCode,\n+                playerMark\n+            });\n+            socket.emit('makeMove', {\n+                cellIndex,\n+                gameCode\n+            });\n+        }\n \n         function addPopAnimation(element) {\n             element.classList.add('animate-pop');\n             element.addEventListener('animationend', () => {\n                 element.classList.remove('animate-pop');\n-            }, { once: true });\n+            }, {\n+                once: true\n+            });\n         }\n         // Check for game code in URL on page load\n-        window.addEventListener('load', function() {\n+        window.addEventListener('load', function () {\n             const urlParams = new URLSearchParams(window.location.search);\n             const code = urlParams.get('code');\n             if (code) {\n                 document.getElementById('gameCodeInput').value = code;\n@@ -318,47 +337,55 @@\n             addPopAnimation(document.getElementById('gameBoard'));\n \n             // Update URL with game code\n             const newUrl = `${window.location.pathname}?code=${gameCode}`;\n-            window.history.pushState({ path: newUrl }, '', newUrl);\n+            window.history.pushState({\n+                path: newUrl\n+            }, '', newUrl);\n         });\n \n         socket.on('gameJoined', (data) => {\n-    document.getElementById('gameBoard').style.display = 'grid';\n-    document.getElementById('joinForm').style.display = 'none';\n-    document.getElementById('status').textContent = \"Game started! You are \" + data.mark;\n-    playerMark = data.mark;\n-    currentTurn = data.mark === 'X'; // X goes first\n-    addPopAnimation(document.getElementById('gameBoard'));\n-    console.log('Game joined:', { playerMark, currentTurn });\n-});\n-socket.on('updateGame', (data) => {\n-    console.log('Game updated:', data);\n-    const cells = document.getElementsByClassName('cell');\n-    data.board.forEach((mark, index) => {\n-        if (mark !== cells[index].textContent) {\n-            cells[index].textContent = mark;\n-            if (mark) addPopAnimation(cells[index]);\n-        }\n-        cells[index].disabled = !!mark;\n-    });\n-    \n-    currentTurn = data.currentPlayer === playerMark;\n-    document.getElementById('status').textContent = currentTurn ? 'Your turn!' : \"Opponent's turn\";\n-    console.log('Turn updated:', { currentTurn, playerMark });\n-});\n+            document.getElementById('gameBoard').style.display = 'grid';\n+            document.getElementById('joinForm').style.display = 'none';\n+            document.getElementById('status').textContent = \"Game started! You are \" + data.mark;\n+            playerMark = data.mark;\n+            currentTurn = data.mark === 'X'; // X goes first\n+            addPopAnimation(document.getElementById('gameBoard'));\n+            console.log('Game joined:', {\n+                playerMark,\n+                currentTurn\n+            });\n+        });\n+        socket.on('updateGame', (data) => {\n+            console.log('Game updated:', data);\n+            const cells = document.getElementsByClassName('cell');\n+            data.board.forEach((mark, index) => {\n+                if (mark !== cells[index].textContent) {\n+                    cells[index].textContent = mark;\n+                    if (mark) addPopAnimation(cells[index]);\n+                }\n+                cells[index].disabled = !!mark;\n+            });\n \n+            currentTurn = data.currentPlayer === playerMark;\n+            document.getElementById('status').textContent = currentTurn ? 'Your turn!' : \"Opponent's turn\";\n+            console.log('Turn updated:', {\n+                currentTurn,\n+                playerMark\n+            });\n+        });\n+\n         socket.on('gameOver', (data) => {\n             const cells = document.getElementsByClassName('cell');\n             data.board.forEach((mark, index) => {\n                 cells[index].textContent = mark;\n                 cells[index].disabled = true;\n             });\n-            \n-            const statusText = data.winner ? \n-                (data.winner === playerMark ? 'You won! 🎉' : 'You lost! 😔') : \n+\n+            const statusText = data.winner ?\n+                (data.winner === playerMark ? 'You won! 🎉' : 'You lost! 😔') :\n                 'Game ended in a draw! 🤝';\n-            \n+\n             document.getElementById('status').textContent = statusText;\n             currentTurn = false;\n         });\n \n@@ -366,5 +393,6 @@\n             alert(message);\n         });\n     </script>\n </body>\n+\n </html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732965881942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -247,18 +247,52 @@\n             }\n         }\n \n         function makeMove(cellIndex) {\n-            if (currentTurn) {\n-                const cell = document.getElementsByClassName('cell')[cellIndex];\n-                if (!cell.textContent) {\n-                    socket.emit('makeMove', {\n-                        cellIndex,\n-                        gameCode: document.getElementById('gameCode').textContent.split(': ')[1]\n-                    });\n-                }\n+            if (!currentTurn) {\n+                console.log('Not your turn');\n+                return;\n             }\n+\n+            const cell = document.getElementsByClassName('cell')[cellIndex];\n+            if (cell.textContent) {\n+                console.log('Cell already taken');\n+                return;\n+            }\n+\n+            let gameCode;\n+            const codeElement = document.getElementById('gameCode');\n+            if (codeElement && codeElement.textContent) {\n+                gameCode = codeElement.textContent.split(': ')[1];\n+            }\n+\n+            if (!gameCode) {\n+                console.error('No game code found');\n+                return;\n+            }\n+\n+            console.log('Making move:', {\n+                cellIndex,\n+                gameCode,\n+                playerMark,\n+                currentTurn\n+            });\n+\n+            socket.emit('makeMove', {\n+                cellIndex,\n+                gameCode\n+            });\n         }\n+        if (currentTurn) {\n+            const cell = document.getElementsByClassName('cell')[cellIndex];\n+            if (!cell.textContent) {\n+                socket.emit('makeMove', {\n+                    cellIndex,\n+                    gameCode: document.getElementById('gameCode').textContent.split(': ')[1]\n+                });\n+            }\n+        }\n+        }\n \n         function copyGameCode() {\n             const gameCode = document.getElementById('gameCode').textContent.split(': ')[1];\n             const shareUrl = `${window.location.origin}${window.location.pathname}?code=${gameCode}`;\n@@ -357,21 +391,26 @@\n         });\n         socket.on('updateGame', (data) => {\n             console.log('Game updated:', data);\n             const cells = document.getElementsByClassName('cell');\n+\n+            // Update board\n             data.board.forEach((mark, index) => {\n-                if (mark !== cells[index].textContent) {\n-                    cells[index].textContent = mark;\n-                    if (mark) addPopAnimation(cells[index]);\n-                }\n+                cells[index].textContent = mark;\n                 cells[index].disabled = !!mark;\n             });\n \n+            // Update turn\n             currentTurn = data.currentPlayer === playerMark;\n-            document.getElementById('status').textContent = currentTurn ? 'Your turn!' : \"Opponent's turn\";\n+\n+            // Update status message\n+            const statusMessage = currentTurn ? 'Your turn!' : \"Opponent's turn\";\n+            document.getElementById('status').textContent = statusMessage;\n+\n             console.log('Turn updated:', {\n                 currentTurn,\n-                playerMark\n+                playerMark,\n+                currentPlayer: data.currentPlayer\n             });\n         });\n \n         socket.on('gameOver', (data) => {\n"
                },
                {
                    "date": 1732966073510,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -246,53 +246,52 @@\n                 copyGameCode();\n             }\n         }\n \n-        function makeMove(cellIndex) {\n-            if (!currentTurn) {\n-                console.log('Not your turn');\n-                return;\n-            }\n+function makeMove(cellIndex) {\n+    if (!currentTurn) {\n+        console.log('Not your turn');\n+        return;\n+    }\n \n-            const cell = document.getElementsByClassName('cell')[cellIndex];\n-            if (cell.textContent) {\n-                console.log('Cell already taken');\n-                return;\n-            }\n+    const cell = document.getElementsByClassName('cell')[cellIndex];\n+    if (cell.textContent) {\n+        console.log('Cell already taken');\n+        return;\n+    }\n \n-            let gameCode;\n-            const codeElement = document.getElementById('gameCode');\n-            if (codeElement && codeElement.textContent) {\n-                gameCode = codeElement.textContent.split(': ')[1];\n-            }\n+    let gameCode;\n+    const codeElement = document.getElementById('gameCode');\n+    if (codeElement && codeElement.textContent) {\n+        gameCode = codeElement.textContent.split(': ')[1];\n+    }\n+    \n+    if (!gameCode) {\n+        console.error('No game code found');\n+        return;\n+    }\n \n-            if (!gameCode) {\n-                console.error('No game code found');\n-                return;\n+    console.log('Making move:', {\n+        cellIndex,\n+        gameCode,\n+        playerMark,\n+        currentTurn\n+    });\n+    \n+    socket.emit('makeMove', {\n+        cellIndex,\n+        gameCode\n+    });\n+}            if (currentTurn) {\n+                const cell = document.getElementsByClassName('cell')[cellIndex];\n+                if (!cell.textContent) {\n+                    socket.emit('makeMove', {\n+                        cellIndex,\n+                        gameCode: document.getElementById('gameCode').textContent.split(': ')[1]\n+                    });\n+                }\n             }\n-\n-            console.log('Making move:', {\n-                cellIndex,\n-                gameCode,\n-                playerMark,\n-                currentTurn\n-            });\n-\n-            socket.emit('makeMove', {\n-                cellIndex,\n-                gameCode\n-            });\n         }\n-        if (currentTurn) {\n-            const cell = document.getElementsByClassName('cell')[cellIndex];\n-            if (!cell.textContent) {\n-                socket.emit('makeMove', {\n-                    cellIndex,\n-                    gameCode: document.getElementById('gameCode').textContent.split(': ')[1]\n-                });\n-            }\n-        }\n-        }\n \n         function copyGameCode() {\n             const gameCode = document.getElementById('gameCode').textContent.split(': ')[1];\n             const shareUrl = `${window.location.origin}${window.location.pathname}?code=${gameCode}`;\n@@ -389,31 +388,31 @@\n                 currentTurn\n             });\n         });\n         socket.on('updateGame', (data) => {\n-            console.log('Game updated:', data);\n-            const cells = document.getElementsByClassName('cell');\n+    console.log('Game updated:', data);\n+    const cells = document.getElementsByClassName('cell');\n+    \n+    // Update board\n+    data.board.forEach((mark, index) => {\n+        cells[index].textContent = mark;\n+        cells[index].disabled = !!mark;\n+    });\n \n-            // Update board\n-            data.board.forEach((mark, index) => {\n-                cells[index].textContent = mark;\n-                cells[index].disabled = !!mark;\n-            });\n+    // Update turn\n+    currentTurn = data.currentPlayer === playerMark;\n+    \n+    // Update status message\n+    const statusMessage = currentTurn ? 'Your turn!' : \"Opponent's turn\";\n+    document.getElementById('status').textContent = statusMessage;\n+    \n+    console.log('Turn updated:', {\n+        currentTurn,\n+        playerMark,\n+        currentPlayer: data.currentPlayer\n+    });\n+});\n \n-            // Update turn\n-            currentTurn = data.currentPlayer === playerMark;\n-\n-            // Update status message\n-            const statusMessage = currentTurn ? 'Your turn!' : \"Opponent's turn\";\n-            document.getElementById('status').textContent = statusMessage;\n-\n-            console.log('Turn updated:', {\n-                currentTurn,\n-                playerMark,\n-                currentPlayer: data.currentPlayer\n-            });\n-        });\n-\n         socket.on('gameOver', (data) => {\n             const cells = document.getElementsByClassName('cell');\n             data.board.forEach((mark, index) => {\n                 cells[index].textContent = mark;\n"
                },
                {
                    "date": 1732966089390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -387,9 +387,9 @@\n                 playerMark,\n                 currentTurn\n             });\n         });\n-        socket.on('updateGame', (data) => {\n+socket.on('updateGame', (data) => {\n     console.log('Game updated:', data);\n     const cells = document.getElementsByClassName('cell');\n     \n     // Update board\n"
                }
            ],
            "date": 1732963695931,
            "name": "Commit-0",
            "content": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Multiplayer Tic-tac-toe</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            min-height: 100vh;\n            margin: 0;\n            background-color: #f0f0f0;\n        }\n\n        .container {\n            text-align: center;\n            background: white;\n            padding: 2rem;\n            border-radius: 10px;\n            box-shadow: 0 0 10px rgba(0,0,0,0.1);\n        }\n\n        #gameBoard {\n            display: none;\n            grid-template-columns: repeat(3, 1fr);\n            gap: 10px;\n            margin: 20px auto;\n            max-width: 300px;\n        }\n\n        .cell {\n            width: 90px;\n            height: 90px;\n            background: #f8f9fa;\n            border: none;\n            border-radius: 8px;\n            font-size: 2.5em;\n            cursor: pointer;\n            transition: background-color 0.3s;\n        }\n\n        .cell:hover {\n            background: #e9ecef;\n        }\n\n        #joinForm {\n            margin-bottom: 20px;\n        }\n\n        input, button {\n            padding: 10px;\n            margin: 5px;\n            border: 1px solid #ddd;\n            border-radius: 5px;\n        }\n\n        button {\n            background: #007bff;\n            color: white;\n            border: none;\n            cursor: pointer;\n            transition: background-color 0.3s;\n        }\n\n        button:hover {\n            background: #0056b3;\n        }\n\n        #status {\n            margin: 20px 0;\n            font-weight: bold;\n            min-height: 24px;\n        }\n\n        #gameCode {\n            display: none;\n            margin: 10px 0;\n            padding: 10px;\n            background: #e9ecef;\n            border-radius: 5px;\n        }\n    </style>\n    <script src=\"/socket.io/socket.io.js\"></script>\n</head>\n<body>\n    <div class=\"container\">\n        <h1>Multiplayer Tic-tac-toe</h1>\n        \n        <div id=\"joinForm\">\n            <input type=\"text\" id=\"gameCodeInput\" placeholder=\"Enter game code\">\n            <button onclick=\"joinGame()\">Join Game</button>\n            <button onclick=\"createGame()\">Create New Game</button>\n        </div>\n\n        <div id=\"gameCode\"></div>\n        <div id=\"status\"></div>\n\n        <div id=\"gameBoard\">\n            <button class=\"cell\" onclick=\"makeMove(0)\"></button>\n            <button class=\"cell\" onclick=\"makeMove(1)\"></button>\n            <button class=\"cell\" onclick=\"makeMove(2)\"></button>\n            <button class=\"cell\" onclick=\"makeMove(3)\"></button>\n            <button class=\"cell\" onclick=\"makeMove(4)\"></button>\n            <button class=\"cell\" onclick=\"makeMove(5)\"></button>\n            <button class=\"cell\" onclick=\"makeMove(6)\"></button>\n            <button class=\"cell\" onclick=\"makeMove(7)\"></button>\n            <button class=\"cell\" onclick=\"makeMove(8)\"></button>\n        </div>\n    </div>\n\n    <script>\n        const socket = io('wss://tic-tac-toe-420d.onrender.com');\n        let playerMark = '';\n        let currentTurn = false;\n\n        function createGame() {\n            socket.emit('createGame');\n        }\n\n        function joinGame() {\n            const code = document.getElementById('gameCodeInput').value;\n            if (code) {\n                socket.emit('joinGame', code);\n            }\n        }\n\n        function makeMove(cellIndex) {\n            if (currentTurn) {\n                socket.emit('makeMove', { cellIndex, gameCode: document.getElementById('gameCode').textContent.split(': ')[1] });\n            }\n        }\n\n        socket.on('gameCreated', (gameCode) => {\n            document.getElementById('gameCode').style.display = 'block';\n            document.getElementById('gameCode').textContent = 'Game Code: ' + gameCode;\n            document.getElementById('status').textContent = 'Waiting for opponent...';\n            document.getElementById('gameBoard').style.display = 'grid';\n            document.getElementById('joinForm').style.display = 'none';\n            playerMark = 'X';\n        });\n\n        socket.on('gameJoined', (data) => {\n            document.getElementById('gameBoard').style.display = 'grid';\n            document.getElementById('joinForm').style.display = 'none';\n            document.getElementById('status').textContent = \"Game started! You are \" + data.mark;\n            playerMark = data.mark;\n            currentTurn = data.mark === 'X';\n        });\n\n        socket.on('updateGame', (data) => {\n            const cells = document.getElementsByClassName('cell');\n            for (let i = 0; i < cells.length; i++) {\n                cells[i].textContent = data.board[i];\n            }\n            currentTurn = data.currentPlayer === playerMark;\n            document.getElementById('status').textContent = currentTurn ? 'Your turn!' : \"Opponent's turn\";\n        });\n\n        socket.on('gameOver', (data) => {\n            const cells = document.getElementsByClassName('cell');\n            for (let i = 0; i < cells.length; i++) {\n                cells[i].textContent = data.board[i];\n            }\n            document.getElementById('status').textContent = data.winner ? \n                (data.winner === playerMark ? 'You won!' : 'You lost!') : \n                'Game ended in a draw!';\n            currentTurn = false;\n        });\n\n        socket.on('error', (message) => {\n            alert(message);\n        });\n    </script>\n</body>\n</html>"
        }
    ]
}
{
    "sourceFile": "public/index.html",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1732963695931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1732963798313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,9 +110,9 @@\n         </div>\n     </div>\n \n     <script>\n-        const socket = io('wss://tic-tac-toe-420d.onrender.com');\n+        const socket = io('wss://tic-tac-toe-420d.onrender.com/');\n         let playerMark = '';\n         let currentTurn = false;\n \n         function createGame() {\n"
                }
            ],
            "date": 1732963695931,
            "name": "Commit-0",
            "content": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Multiplayer Tic-tac-toe</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            min-height: 100vh;\n            margin: 0;\n            background-color: #f0f0f0;\n        }\n\n        .container {\n            text-align: center;\n            background: white;\n            padding: 2rem;\n            border-radius: 10px;\n            box-shadow: 0 0 10px rgba(0,0,0,0.1);\n        }\n\n        #gameBoard {\n            display: none;\n            grid-template-columns: repeat(3, 1fr);\n            gap: 10px;\n            margin: 20px auto;\n            max-width: 300px;\n        }\n\n        .cell {\n            width: 90px;\n            height: 90px;\n            background: #f8f9fa;\n            border: none;\n            border-radius: 8px;\n            font-size: 2.5em;\n            cursor: pointer;\n            transition: background-color 0.3s;\n        }\n\n        .cell:hover {\n            background: #e9ecef;\n        }\n\n        #joinForm {\n            margin-bottom: 20px;\n        }\n\n        input, button {\n            padding: 10px;\n            margin: 5px;\n            border: 1px solid #ddd;\n            border-radius: 5px;\n        }\n\n        button {\n            background: #007bff;\n            color: white;\n            border: none;\n            cursor: pointer;\n            transition: background-color 0.3s;\n        }\n\n        button:hover {\n            background: #0056b3;\n        }\n\n        #status {\n            margin: 20px 0;\n            font-weight: bold;\n            min-height: 24px;\n        }\n\n        #gameCode {\n            display: none;\n            margin: 10px 0;\n            padding: 10px;\n            background: #e9ecef;\n            border-radius: 5px;\n        }\n    </style>\n    <script src=\"/socket.io/socket.io.js\"></script>\n</head>\n<body>\n    <div class=\"container\">\n        <h1>Multiplayer Tic-tac-toe</h1>\n        \n        <div id=\"joinForm\">\n            <input type=\"text\" id=\"gameCodeInput\" placeholder=\"Enter game code\">\n            <button onclick=\"joinGame()\">Join Game</button>\n            <button onclick=\"createGame()\">Create New Game</button>\n        </div>\n\n        <div id=\"gameCode\"></div>\n        <div id=\"status\"></div>\n\n        <div id=\"gameBoard\">\n            <button class=\"cell\" onclick=\"makeMove(0)\"></button>\n            <button class=\"cell\" onclick=\"makeMove(1)\"></button>\n            <button class=\"cell\" onclick=\"makeMove(2)\"></button>\n            <button class=\"cell\" onclick=\"makeMove(3)\"></button>\n            <button class=\"cell\" onclick=\"makeMove(4)\"></button>\n            <button class=\"cell\" onclick=\"makeMove(5)\"></button>\n            <button class=\"cell\" onclick=\"makeMove(6)\"></button>\n            <button class=\"cell\" onclick=\"makeMove(7)\"></button>\n            <button class=\"cell\" onclick=\"makeMove(8)\"></button>\n        </div>\n    </div>\n\n    <script>\n        const socket = io('wss://tic-tac-toe-420d.onrender.com');\n        let playerMark = '';\n        let currentTurn = false;\n\n        function createGame() {\n            socket.emit('createGame');\n        }\n\n        function joinGame() {\n            const code = document.getElementById('gameCodeInput').value;\n            if (code) {\n                socket.emit('joinGame', code);\n            }\n        }\n\n        function makeMove(cellIndex) {\n            if (currentTurn) {\n                socket.emit('makeMove', { cellIndex, gameCode: document.getElementById('gameCode').textContent.split(': ')[1] });\n            }\n        }\n\n        socket.on('gameCreated', (gameCode) => {\n            document.getElementById('gameCode').style.display = 'block';\n            document.getElementById('gameCode').textContent = 'Game Code: ' + gameCode;\n            document.getElementById('status').textContent = 'Waiting for opponent...';\n            document.getElementById('gameBoard').style.display = 'grid';\n            document.getElementById('joinForm').style.display = 'none';\n            playerMark = 'X';\n        });\n\n        socket.on('gameJoined', (data) => {\n            document.getElementById('gameBoard').style.display = 'grid';\n            document.getElementById('joinForm').style.display = 'none';\n            document.getElementById('status').textContent = \"Game started! You are \" + data.mark;\n            playerMark = data.mark;\n            currentTurn = data.mark === 'X';\n        });\n\n        socket.on('updateGame', (data) => {\n            const cells = document.getElementsByClassName('cell');\n            for (let i = 0; i < cells.length; i++) {\n                cells[i].textContent = data.board[i];\n            }\n            currentTurn = data.currentPlayer === playerMark;\n            document.getElementById('status').textContent = currentTurn ? 'Your turn!' : \"Opponent's turn\";\n        });\n\n        socket.on('gameOver', (data) => {\n            const cells = document.getElementsByClassName('cell');\n            for (let i = 0; i < cells.length; i++) {\n                cells[i].textContent = data.board[i];\n            }\n            document.getElementById('status').textContent = data.winner ? \n                (data.winner === playerMark ? 'You won!' : 'You lost!') : \n                'Game ended in a draw!';\n            currentTurn = false;\n        });\n\n        socket.on('error', (message) => {\n            alert(message);\n        });\n    </script>\n</body>\n</html>"
        }
    ]
}
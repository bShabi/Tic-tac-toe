{
    "sourceFile": "main.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1732987664601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1732987664601,
            "name": "Commit-0",
            "content": "let board = Array(9).fill('');\nlet gameActive = true;\nlet playerScore = 0;\nlet aiScore = 0;\n\nfunction makeMove(cellIndex) {\n    if (!gameActive || board[cellIndex] !== '') return;\n\n    // Player move\n    board[cellIndex] = 'X';\n    updateCell(cellIndex, 'X');\n    \n    if (checkWinner() || board.every(cell => cell !== '')) {\n        endGame();\n        return;\n    }\n\n    // AI move\n    gameActive = false;\n    document.getElementById('status').textContent = \"AI is thinking...\";\n    \n    setTimeout(() => {\n        makeAIMove();\n        gameActive = true;\n        \n        if (checkWinner() || board.every(cell => cell !== '')) {\n            endGame();\n        } else {\n            document.getElementById('status').textContent = \"Your turn! (X)\";\n        }\n    }, 500);\n}\n\nfunction makeAIMove() {\n    // Try to win\n    const winMove = findBestMove('O');\n    if (winMove !== -1) {\n        board[winMove] = 'O';\n        updateCell(winMove, 'O');\n        return;\n    }\n\n    // Block player from winning\n    const blockMove = findBestMove('X');\n    if (blockMove !== -1) {\n        board[blockMove] = 'O';\n        updateCell(blockMove, 'O');\n        return;\n    }\n\n    // Take center if available\n    if (board[4] === '') {\n        board[4] = 'O';\n        updateCell(4, 'O');\n        return;\n    }\n\n    // Take any available corner\n    const corners = [0, 2, 6, 8];\n    const availableCorners = corners.filter(i => board[i] === '');\n    if (availableCorners.length > 0) {\n        const move = availableCorners[Math.floor(Math.random() * availableCorners.length)];\n        board[move] = 'O';\n        updateCell(move, 'O');\n        return;\n    }\n\n    // Take any available side\n    const sides = [1, 3, 5, 7];\n    const availableSides = sides.filter(i => board[i] === '');\n    if (availableSides.length > 0) {\n        const move = availableSides[Math.floor(Math.random() * availableSides.length)];\n        board[move] = 'O';\n        updateCell(move, 'O');\n    }\n}\n\nfunction findBestMove(player) {\n    const winPatterns = [\n        [0, 1, 2], [3, 4, 5], [6, 7, 8], // Rows\n        [0, 3, 6], [1, 4, 7], [2, 5, 8], // Columns\n        [0, 4, 8], [2, 4, 6] // Diagonals\n    ];\n\n    for (let pattern of winPatterns) {\n        const [a, b, c] = pattern;\n        if (board[a] === player && board[b] === player && board[c] === '') return c;\n        if (board[a] === player && board[c] === player && board[b] === '') return b;\n        if (board[b] === player && board[c] === player && board[a] === '') return a;\n    }\n    return -1;\n}\n\nfunction updateCell(index, mark) {\n    const cell = document.getElementsByClassName('cell')[index];\n    cell.textContent = mark;\n    cell.disabled = true;\n    addPopAnimation(cell);\n}\n\nfunction checkWinner() {\n    const winPatterns = [\n        [0, 1, 2], [3, 4, 5], [6, 7, 8], // Rows\n        [0, 3, 6], [1, 4, 7], [2, 5, 8], // Columns\n        [0, 4, 8], [2, 4, 6] // Diagonals\n    ];\n\n    for (let pattern of winPatterns) {\n        const [a, b, c] = pattern;\n        if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n            return board[a];\n        }\n    }\n    return null;\n}\n\nfunction endGame() {\n    const winner = checkWinner();\n    if (winner) {\n        if (winner === 'X') {\n            playerScore++;\n            document.getElementById('status').textContent = \"You won! 🎉\";\n        } else {\n            aiScore++;\n            document.getElementById('status').textContent = \"AI won! 😔\";\n        }\n    } else {\n        document.getElementById('status').textContent = \"It's a draw! 🤝\";\n    }\n    \n    document.getElementById('playerScore').textContent = playerScore;\n    document.getElementById('aiScore').textContent = aiScore;\n    gameActive = false;\n}\n\nfunction resetGame() {\n    board = Array(9).fill('');\n    gameActive = true;\n    document.getElementById('status').textContent = \"Your turn! (X)\";\n    \n    const cells = document.getElementsByClassName('cell');\n    for (let cell of cells) {\n        cell.textContent = '';\n        cell.disabled = false;\n    }\n}\n\nfunction resetScore() {\n    playerScore = 0;\n    aiScore = 0;\n    document.getElementById('playerScore').textContent = '0';\n    document.getElementById('aiScore').textContent = '0';\n    resetGame();\n}\n\nfunction addPopAnimation(element) {\n    element.classList.add('animate-pop');\n    element.addEventListener('animationend', () => {\n        element.classList.remove('animate-pop');\n    }, { once: true });\n}\n"
        }
    ]
}